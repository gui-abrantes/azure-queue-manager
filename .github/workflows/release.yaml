name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.101'

      - name: Install dependencies
        run: dotnet restore

      - name: Publish
        run: dotnet publish -c Release -r ${{ matrix.os == 'ubuntu-latest' && 'linux-x64' || 'win-x64' }} --self-contained -o out

      - name: Compress binaries
        run: |
          mkdir -p release
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            zip -r release/azmsgctl-linux.zip out/*
          else
            powershell Compress-Archive -Path out\* -DestinationPath release/azmsgctl-linux.zip
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automatic release from GitHub Actions.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            release/mazmsgctl-linux.zip
            release/azmsgctl-windows.zip
          asset_name: ${{ matrix.os == 'ubuntu-latest' && 'azmsgctl-linux.zip' || 'azmsgctl-windows.zip' }}
          asset_content_type: application/zip
